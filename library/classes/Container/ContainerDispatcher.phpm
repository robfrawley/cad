<?php
/**
 * Moin
 * @package moin-base
 *
 * @author Rob Frawley <code AT robfrawley DOT com>
 * @license GNU Public License <http://www.gnu.org/licenses/gpl.txt>
 *
 * @version $Id: ContainerDispatcher.phpm 168 2007-10-07 03:01:46Z rmf $
 */

/**#@+
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; only version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * the abstract container  implements basic functionality
 *
 * @package moin-base
 * @subpackage moin-library
 */
class ContainerDispatcher implements ContainerInterface
{
  /**
   * holds instance of Dispatcher
   *
   * @var Dispatcher
   */
  protected $_Dispatcher;

  /**
   * constructor sets the dispatcher interface
   *
   * @param DispatcherInterface $Dispatcher
   * @return void
   */
  public function __construct(DispatcherInterface $Dispatcher)
  {
    $this->setDispatcher($Dispatcher);
  }

  /**
   * sets the dispatcher interface
   *
   * @param DispatcherInterface $Dispatcher
   * @return void
   */
  public function setDispatcher(DispatcherInterface $Dispatcher)
  {
    $this->_Dispatcher = $Dispatcher;
  }

  /**
   * returns the dispatcher interface
   * 
   * @return DispatcherInterface
   */
  public function getDispatcher()
  {
    return $this->_Dispatcher;
  }

  /**
   * returns the router instance
   *
   * @return RouterInterface
   */
  public function getRouter()
  {
    return $this->_Dispatcher->getRouter();
  }

  /**
   * returns the request instance
   *
   * @return RequestInterface
   */
  public function getRequest()
  {
    return $this->_Dispatcher->getRequest();
  }
}
?>
