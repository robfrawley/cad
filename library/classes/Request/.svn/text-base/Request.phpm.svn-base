<?php
/**
 * Moin
 * @package moin-base
 *
 * @author Rob Frawley <robfrawley AT stripslashes DOT com>
 * @license GNU Public License <http://www.gnu.org/licenses/gpl.txt>
 *
 * @version $Id$
 */

/**#@+
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; only version 2
 * of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * request handles http get and post request values
 *
 * @package moin-base
 * @subpackage moin-library
 */
class Request implements RequestInterface {
  /**
   * request variables
   *
   * @var array
   */
  protected $_request_variables = array();

  /**
   * constructor populates request variables array
   *
   * @return void
   */
	public function __construct()
	{
		$this->_populateRequestVariables();
	}

  /**
   * get request value by index
   *
   * @param string $index
   * @return string|bool
   */
  public function __get($index)
  {
    if(array_key_exists($index, $this->_request_variables))
    {
      return (string)$this->_request_variables[$index];
    }
    else
    {
      return (bool)false;
    }
  }

  public function get($index)
  {
    if(array_key_exists($index, $this->_request_variables))
    {
      return (string)$this->_request_variables[$index];
    }
    else
    {
      return (bool)false;
    }
  }

  /**
   * check if this page load has any post or get request variables
   *
   * @return bool
   */
  public function isRequest()
  {
    if(is_array($this->_request_variables) && sizeof($this->_request_variables) > 0)
    {
      return (bool)true;
    }
    else
    {
      return (bool)false;
    }
  }

  /**
   * populate request variables array
   * post variables override get variables
   *
   * @return void
   */
  protected function _populateRequestVariables()
  {
//    foreach($_GET as $index => $value)
//    {
//      $this->_request_variables[$this->_cleanIndex($index)] = $value;
//    }
    foreach($_POST as $index => $value)
    {
      $this->_request_variables[$this->_cleanIndex($index)] = $value;
    }
  }

  /**
   * cleans the string for array index
   *
   * @param string $string
   * @return string
   */
  protected function _cleanIndex($string)
  {
    return (string)ereg_replace('[^A-Za-z0-9_-]', '', $string);
  }
}
?>